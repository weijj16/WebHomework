{"version":3,"sources":["Bird.js"],"names":["cc","Class","extends","Component","properties","flyAudio","url","AudioClip","default","gravity","flySpeed","power","flyDown","down","moveBy","p","easing","easeCubicActionOut","node","runAction","flyUp","up","setInputControl","self","listener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","touches","audioEngine","play","onTouchMoved","onTouchEnded","touchListener","eventManager","addListener","onLoad","manager","director","getCollisionManager","enabled","collision","onCollisionEnter","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAER;AACAC,kBAAU;AACNC,iBAAKN,GAAGO,SADF;AAENC,qBAAS;AAFH,SAHF;;AAQRC,iBAAS,CARD,EAQI;AACZC,kBAAU,CATF,EASK;AACbC,eAAO,CAVC,CAUE;AAVF,KAHP;;AAgBL;AACAC,aAAS,mBAAW;AAChB,YAAIC,OAAOb,GAAGc,MAAH,CAAU,KAAKJ,QAAf,EAAyBV,GAAGe,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKN,OAAd,CAAzB,EAAiDO,MAAjD,CAAwDhB,GAAGiB,kBAAH,EAAxD,CAAX;AACA,aAAKC,IAAL,CAAUC,SAAV,CAAoBN,IAApB;AACH,KApBI;;AAsBL;AACAO,WAAO,iBAAW;AACd,YAAIC,KAAKrB,GAAGc,MAAH,CAAU,KAAKJ,QAAf,EAAyBV,GAAGe,CAAH,CAAK,CAAL,EAAQ,KAAK,KAAKJ,KAAlB,CAAzB,EAAmDK,MAAnD,CAA0DhB,GAAGiB,kBAAH,EAA1D,CAAT;AACA,aAAKC,IAAL,CAAUC,SAAV,CAAoBE,EAApB;AACH,KA1BI;;AA4BL;AACAC,qBAAiB,2BAAW;AACxB,YAAIC,OAAO,IAAX;;AAEA,YAAIC,WAAW;AACXC,mBAAOzB,GAAG0B,aAAH,CAAiBC,gBADb;AAEXC,0BAAc,sBAASC,OAAT,EAAkBJ,KAAlB,EAAyB;AACnCzB,mBAAG8B,WAAH,CAAeC,IAAf,CAAoBR,KAAKlB,QAAzB,EAAmC,KAAnC,EAA0C,CAA1C;AACAkB,qBAAKH,KAAL;AACA,uBAAO,IAAP;AACH,aANU;AAOXY,0BAAc,wBAAW,CAAE,CAPhB;AAQXC,0BAAc,wBAAW,CAAE;;AAG/B;AAXe,SAAf,CAYA,KAAKC,aAAL,GAAqBlC,GAAGmC,YAAH,CAAgBC,WAAhB,CAA4BZ,QAA5B,EAAsCD,KAAKL,IAA3C,CAArB;AACH,KA7CI;;AA+CL;AACAmB,YAAQ,kBAAW;AACf;AACA,YAAIC,UAAUtC,GAAGuC,QAAH,CAAYC,mBAAZ,EAAd;;AAEA;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACA;AACA;;;AAGA,aAAKP,aAAL;;AAEA,aAAKQ,SAAL,GAAiB,KAAjB;;AAEA,aAAKpB,eAAL;AACH,KA/DI;;AAiEL;AACAqB,sBAAkB,4BAAW;AACzB,aAAKD,SAAL,GAAiB,IAAjB;AACH,KApEI;;AAsEL;AACAE,YAAQ,gBAASC,EAAT,EAAa;AACjB,aAAKjC,OAAL;AACH;AAzEI,CAAT","file":"Bird.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        //点击飞行的声音\r\n        flyAudio: {\r\n            url: cc.AudioClip,\r\n            default: null\r\n        },\r\n\r\n        gravity: 5, //重力大小\r\n        flySpeed: 2, //重力和飞行的中间影响值\r\n        power: 5, //飞行的力量\r\n    },\r\n\r\n    //下坠\r\n    flyDown: function() {\r\n        var down = cc.moveBy(this.flySpeed, cc.p(0, -this.gravity)).easing(cc.easeCubicActionOut());\r\n        this.node.runAction(down);\r\n    },\r\n\r\n    //上升\r\n    flyUp: function() {\r\n        var up = cc.moveBy(this.flySpeed, cc.p(0, 50 * this.power)).easing(cc.easeCubicActionOut());\r\n        this.node.runAction(up);\r\n    },\r\n\r\n    //点击向上飞起\r\n    setInputControl: function() {\r\n        var self = this;\r\n\r\n        var listener = {\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan: function(touches, event) {\r\n                cc.audioEngine.play(self.flyAudio, false, 1);\r\n                self.flyUp();\r\n                return true;\r\n            },\r\n            onTouchMoved: function() {},\r\n            onTouchEnded: function() {}\r\n        }\r\n\r\n        //获取监听对象\r\n        this.touchListener = cc.eventManager.addListener(listener, self.node);\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function() {\r\n        //获取碰撞检测系统\r\n        var manager = cc.director.getCollisionManager();\r\n\r\n        // 开启碰撞检测系统\r\n        manager.enabled = true;\r\n        // manager.enabledDebugDraw = true;\r\n        // manager.enabledDrawBoundingBox = true;\r\n\r\n\r\n        this.touchListener;\r\n\r\n        this.collision = false;\r\n\r\n        this.setInputControl();\r\n    },\r\n\r\n    //检测是否发生碰撞\r\n    onCollisionEnter: function() {\r\n        this.collision = true;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function(dt) {\r\n        this.flyDown();\r\n    },\r\n});\r\n"]}