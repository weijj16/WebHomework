{"version":3,"sources":["Bird.js"],"names":["cc","Class","extends","Component","properties","WingAudio","default","url","AudioClip","hitAudio","gravity","x_speed","y_speed","flyTouch","self","listener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","touches","audioEngine","play","flyUp","onTouchMoved","onTouchEnded","touchListener","eventManager","addListener","node","up","moveBy","p","easing","easeCubicActionOut","runAction","flyDown","down","onLoad","manager","director","getCollisionManager","enabled","collision","onCollisionEnter","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAER;AACAC,mBAAW;AACPC,qBAAS,IADF;AAEPC,iBAAKP,GAAGQ;AAFD,SAHH;AAORC,kBAAU;AACNH,qBAAS,IADH;AAENC,iBAAKP,GAAGQ;AAFF,SAPF;AAWRE,iBAAS,CAXD,EAWI;AACZC,iBAAS,CAZD,EAYI;AACZC,iBAAS,CAbD,CAaI;AAbJ,KAHP;;AAmBL;AACAC,cAAU,oBAAY;AAClB,YAAIC,OAAO,IAAX;AACA,YAAIC,WAAW;AACXC,mBAAOhB,GAAGiB,aAAH,CAAiBC,gBADb;AAEXC,0BAAc,sBAAUC,OAAV,EAAmBJ,KAAnB,EAA0B;AACpChB,mBAAGqB,WAAH,CAAeC,IAAf,CAAoBR,KAAKT,SAAzB,EAAoC,KAApC,EAA2C,CAA3C;AACAS,qBAAKS,KAAL;AACA,uBAAO,IAAP;AACH,aANU;AAOXC,0BAAc,wBAAY,CAAG,CAPlB;AAQXC,0BAAc,wBAAY,CAAG;AARlB,SAAf;AAUA,aAAKC,aAAL,GAAqB1B,GAAG2B,YAAH,CAAgBC,WAAhB,CAA4Bb,QAA5B,EAAsCD,KAAKe,IAA3C,CAArB;AACH,KAjCI;AAkCL;AACAN,WAAO,iBAAY;AACf,YAAIO,KAAK9B,GAAG+B,MAAH,CAAU,KAAKpB,OAAf,EAAwBX,GAAGgC,CAAH,CAAK,CAAL,EAAQ,KAAK,KAAKpB,OAAlB,CAAxB,EAAoDqB,MAApD,CAA2DjC,GAAGkC,kBAAH,EAA3D,CAAT;AACA,aAAKL,IAAL,CAAUM,SAAV,CAAoBL,EAApB;AACH,KAtCI;;AAwCL;AACAM,aAAS,mBAAY;AACjB,YAAIC,OAAOrC,GAAG+B,MAAH,CAAU,KAAKpB,OAAf,EAAwBX,GAAGgC,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKtB,OAAd,CAAxB,EAAgDuB,MAAhD,CAAuDjC,GAAGkC,kBAAH,EAAvD,CAAX;AACA,aAAKL,IAAL,CAAUM,SAAV,CAAoBE,IAApB;AACH,KA5CI;;AA8CLC,YAAQ,kBAAY;AAChB;AACA,YAAIC,UAAUvC,GAAGwC,QAAH,CAAYC,mBAAZ,EAAd;AACA;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACA,aAAKhB,aAAL;AACA,aAAKiB,SAAL,GAAiB,KAAjB;AACA,aAAK9B,QAAL;AACH,KAtDI;AAuDL;AACA+B,sBAAkB,4BAAY;AAC1B,YAAI9B,OAAO,IAAX;AACA,aAAK6B,SAAL,GAAiB,IAAjB;AACA3C,WAAGqB,WAAH,CAAeC,IAAf,CAAoBR,KAAKL,QAAzB,EAAmC,KAAnC,EAA0C,CAA1C;AACH,KA5DI;AA6DLoC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,aAAKV,OAAL;AACH;;AA/DI,CAAT","file":"Bird.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        //点击飞行的声音\r\n        WingAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n        hitAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n        gravity: 5, //重力大小\r\n        x_speed: 2, //阻力\r\n        y_speed: 5, //飞行的力量\r\n    },\r\n\r\n    //点击飞起\r\n    flyTouch: function () {\r\n        let self = this;\r\n        let listener = {\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan: function (touches, event) {\r\n                cc.audioEngine.play(self.WingAudio, false, 1);\r\n                self.flyUp();\r\n                return true;\r\n            },\r\n            onTouchMoved: function () { },\r\n            onTouchEnded: function () { }\r\n        }\r\n        this.touchListener = cc.eventManager.addListener(listener, self.node);\r\n    },\r\n    //上升\r\n    flyUp: function () {\r\n        let up = cc.moveBy(this.x_speed, cc.p(0, 50 * this.y_speed)).easing(cc.easeCubicActionOut());\r\n        this.node.runAction(up);\r\n    },\r\n\r\n    //下坠\r\n    flyDown: function () {\r\n        let down = cc.moveBy(this.x_speed, cc.p(0, -this.gravity)).easing(cc.easeCubicActionOut());\r\n        this.node.runAction(down);\r\n    },\r\n\r\n    onLoad: function () {\r\n        //获取碰撞检测系统\r\n        let manager = cc.director.getCollisionManager();\r\n        // 开启碰撞检测系统\r\n        manager.enabled = true;\r\n        this.touchListener;\r\n        this.collision = false;\r\n        this.flyTouch();\r\n    },\r\n    //检测是否发生碰撞\r\n    onCollisionEnter: function () {\r\n        let self = this;\r\n        this.collision = true;\r\n        cc.audioEngine.play(self.hitAudio, false, 1);\r\n    },\r\n    update: function (dt) {\r\n        this.flyDown();\r\n    },\r\n\r\n});\r\n"]}